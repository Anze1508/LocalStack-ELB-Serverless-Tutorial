{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "Hello1LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-elb-local-hello1"
      }
    },
    "Hello2LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-elb-local-hello2"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-elb",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-elb-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-elb-local*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-elb",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "Hello1LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "testbucket",
          "S3Key": "serverless/serverless-elb/local/1710079301226-2024-03-10T14:01:41.226Z/serverless-elb.zip"
        },
        "Handler": "handler.hello1",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-elb-local-hello1",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Hello1LogGroup"
      ]
    },
    "Hello2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "testbucket",
          "S3Key": "serverless/serverless-elb/local/1710079301226-2024-03-10T14:01:41.226Z/serverless-elb.zip"
        },
        "Handler": "handler.hello2",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-elb-local-hello2",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Hello2LogGroup"
      ]
    },
    "Hello1LambdaVersionCoYkN7hqh9Qub1lMHdLq74tqkLCcC0bcxexbUxPD7o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Hello1LambdaFunction"
        },
        "CodeSha256": "EiGCy2/xmy00ubLXSWOJQU00jH2mfzjcOA2TUEoHEz0="
      }
    },
    "Hello2LambdaVersion1VlvBSSGyoD1J0noRieYuIsSkahs7yCrTlI2yuY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Hello2LambdaFunction"
        },
        "CodeSha256": "EiGCy2/xmy00ubLXSWOJQU00jH2mfzjcOA2TUEoHEz0="
      }
    },
    "Hello1AlbTargetGroupHTTPListener": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "TargetType": "lambda",
        "Targets": [
          {
            "Id": {
              "Fn::GetAtt": [
                "Hello1LambdaFunction",
                "Arn"
              ]
            }
          }
        ],
        "Name": "92813405d8e6272d0cee05ed3b8b1832",
        "Tags": [
          {
            "Key": "Name",
            "Value": "serverless-elb-hello1-HTTPListener-local"
          }
        ],
        "TargetGroupAttributes": [
          {
            "Key": "lambda.multi_value_headers.enabled",
            "Value": false
          }
        ],
        "HealthCheckEnabled": false
      },
      "DependsOn": [
        "Hello1LambdaPermissionRegisterTarget"
      ]
    },
    "Hello2AlbTargetGroupHTTPListener": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "TargetType": "lambda",
        "Targets": [
          {
            "Id": {
              "Fn::GetAtt": [
                "Hello2LambdaFunction",
                "Arn"
              ]
            }
          }
        ],
        "Name": "6733fac15f13b1c8a49002fc7b8eb3d1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "serverless-elb-hello2-HTTPListener-local"
          }
        ],
        "TargetGroupAttributes": [
          {
            "Key": "lambda.multi_value_headers.enabled",
            "Value": false
          }
        ],
        "HealthCheckEnabled": false
      },
      "DependsOn": [
        "Hello2LambdaPermissionRegisterTarget"
      ]
    },
    "Hello1AlbListenerRule1": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "Hello1AlbTargetGroupHTTPListener"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/hello1"
            ]
          }
        ],
        "ListenerArn": {
          "Ref": "HTTPListener"
        },
        "Priority": 1
      }
    },
    "Hello2AlbListenerRule2": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "Hello2AlbTargetGroupHTTPListener"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/hello2"
            ]
          }
        ],
        "ListenerArn": {
          "Ref": "HTTPListener"
        },
        "Priority": 2
      }
    },
    "Hello1LambdaPermissionAlb": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello1LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "elasticloadbalancing.amazonaws.com",
        "SourceArn": {
          "Ref": "Hello1AlbTargetGroupHTTPListener"
        }
      }
    },
    "Hello1LambdaPermissionRegisterTarget": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello1LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "elasticloadbalancing.amazonaws.com"
      }
    },
    "Hello2LambdaPermissionAlb": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello2LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "elasticloadbalancing.amazonaws.com",
        "SourceArn": {
          "Ref": "Hello2AlbTargetGroupHTTPListener"
        }
      }
    },
    "Hello2LambdaPermissionRegisterTarget": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Hello2LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "elasticloadbalancing.amazonaws.com"
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "lb-test-1",
        "Subnets": [
          {
            "Ref": "Subnet"
          }
        ]
      }
    },
    "HTTPListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "redirect",
            "RedirectConfig": {
              "Protocol": "HTTPS",
              "Port": 443,
              "Host": "#{host}"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancer"
        },
        "Protocol": "HTTP"
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "12.2.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        }
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "12.2.1.0/24"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "testbucket",
      "Export": {
        "Name": "sls-serverless-elb-local-ServerlessDeploymentBucketName"
      }
    },
    "Hello1LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Hello1LambdaVersionCoYkN7hqh9Qub1lMHdLq74tqkLCcC0bcxexbUxPD7o"
      },
      "Export": {
        "Name": "sls-serverless-elb-local-Hello1LambdaFunctionQualifiedArn"
      }
    },
    "Hello2LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Hello2LambdaVersion1VlvBSSGyoD1J0noRieYuIsSkahs7yCrTlI2yuY"
      },
      "Export": {
        "Name": "sls-serverless-elb-local-Hello2LambdaFunctionQualifiedArn"
      }
    }
  }
}